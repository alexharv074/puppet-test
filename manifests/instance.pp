define provisioning::instance (
  $ensure = present,
  $region = 'eu-west-1',
  $availability_zone = 'eu-west-1a',
  $subnet = 'CORE-INFRA-1a',
  $image_id = 'ami-8b8c57f8',
  $instance_type = 't2.micro',
  $key_name = 'AW-CoreServices',
  $tags = { 'Service Owner' => 'Example Onwer', 'Service Name' => 'CLOUD PLATFORM - AMAZON WEB SERVICES', },
  $security_groups = ['Core SSH'],
  $template_name = 'bootstrap-aws.erb',
  $block_devices = [],
  $bootstrap_template_role = 'unset',
  $bootstrap_template_environment = 'core',
  $bootstrap_template_timezone = 'Europe/London',
  $bootstrap_template_http_proxy = 'http_proxy="proxy.aws.uk.example.com:8080"',
  $bootstrap_template_https_proxy = '"https_proxy=proxy.aws.uk.example.com:8080"',
  $bootstrap_template_no_proxy = 'no_proxy=".example.com, puppet.aws.uk.example.com, localhost, 169.254.169.254"',
  $bootstrap_template_yum_proxy = 'http://proxy.aws.uk.example.com:8080',
  $bootstrap_template_pp_preshared_key = '88d35a1a1fb2ba59ea57b056993f3552',
) {
  ec2_instance { $title :
    ensure            => $ensure,
    name              => $title,
    region            => $region,
    availability_zone => $availability_zone,
    subnet            => $subnet,
    image_id          => $image_id,
    instance_type     => $instance_type,
    key_name          => $key_name,
    tags              => $tags,
    security_groups   => $security_groups,
    user_data         => template("provisioning/${template_name}"),
    block_devices     => $block_devices,
  }
}
